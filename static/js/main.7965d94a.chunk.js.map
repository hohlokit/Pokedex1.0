{"version":3,"sources":["Reducers/changePokemonArray.jsx","Reducers/index.js","Components/Header/index.js","Components/PokemonItem/index.js","Components/Main/Main.js","Components/Main/Main.container.js","Actions/changePokemonArray.jsx","constants/action.type.js","Components/PokemonInfoItem/index.js","index.js","Components/App/index.js"],"names":["initState","count","results","combineReducers","pokemonArray","state","action","type","payload","routing","routerReducer","props","useEffect","href","source","useState","imageLoading","setImageLoading","className","id","name","onClick","history","push","style","display","onLoad","src","Main","findPokemons","page","axios","get","params","limit","offset","then","response","data","pokemonsCount","forEach","element","index","onChangePokemonArray","onChange","pageSize","this","countPokemons","length","map","items","key","showSizeChanger","onShowSizeChange","defaultCurrent","total","pageSizeOptions","Component","connect","dispatch","changePokemonArray","MainComponent","pokemonsInfo","setPokemonsInfo","match","pokemonName","val","stats","types","sprites","size","front_default","item","stat","percent","base_stat","showInfo","store","createStore","reducers","window","__REDUX_DEVTOOLS_EXTENSION__","console","log","getState","ReactDOM","render","exact","path","component","PokemonInfoItem","document","getElementById"],"mappings":"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","file":"static/js/main.7965d94a.chunk.js","sourcesContent":["const initState = {\r\n  count: null,\r\n  results: [],\r\n}\r\n\r\nexport default function pokemonArray(state = initState, action) {\r\n  if (action.type === 'CHANGE_POKEMON_ARRAY') {\r\n    const { count, results } = action.payload\r\n    return {\r\n      ...state, //! это зачем тут?\r\n      count, // вдруг ты добавишь другие поля в состояние, что бы оно их не удалило, а только перезаписло те что нам надо\r\n      results,\r\n    }\r\n  }\r\n  return state\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport {  routerReducer } from 'react-router-redux'\r\n\r\nimport pokemonArray from './changePokemonArray';\r\n\r\nexport default combineReducers({\r\n    pokemonArray,\r\n    routing: routerReducer\r\n});","import React, { useEffect } from 'react'\r\nimport './Header.scss'\r\n\r\nexport default props => {\r\n  useEffect(() => {})\r\n  return (\r\n    <header>\r\n      <a href=\"#/\">\r\n        <h1>Pokedex</h1>\r\n      </a>\r\n    </header>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport './PokemonItem.scss'\r\nimport { Spin } from 'antd'\r\nimport Img from 'react-image'\r\n\r\nexport default props => {\r\n  const { source } = props\r\n  const [imageLoading, setImageLoading] = useState(true)\r\n\r\n  const imageLoaded = () => {\r\n    setImageLoading(false)\r\n  }\r\n\r\n  useEffect(() => {}, [])\r\n  return (\r\n    <div\r\n      className=\"pokemonItem\"\r\n      id={source.name}\r\n      onClick={() => props.history.push(source.name)}\r\n    >\r\n      <Spin style={{ display: imageLoading ? 'inline-block' : 'none' }} />\r\n      <Img\r\n        style={{ display: imageLoading ? 'none' : 'flex' }}\r\n        onLoad={imageLoaded}\r\n        src={[\r\n          `https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/${source.id}.png`,\r\n          'http://cdn.onlinewebfonts.com/svg/img_384.png',\r\n        ]}\r\n      />\r\n      <h3>{source.name}</h3>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Pagination } from 'antd'\r\nimport axios from 'axios'\r\nimport PokemonItem from '../PokemonItem'\r\nimport 'antd/dist/antd.css'\r\nimport './Main.scss'\r\n\r\nexport class Main extends Component {\r\n  componentWillMount() {\r\n    this.findPokemons()\r\n  }\r\n\r\n  findPokemons = (page = 1, count = 10) => {\r\n    axios\r\n      .get('https://pokeapi.co/api/v2/pokemon/', {\r\n        params: {\r\n          limit: count,\r\n          offset: (page - 1) * count,\r\n        },\r\n      })\r\n      .then(response => {\r\n        response.data.results.pokemonsCount = response.data.count\r\n        response.data.results.forEach((element, index) => {\r\n          element.id = (page - 1) * count + index + 1\r\n        })\r\n        this.props.onChangePokemonArray(response.data)\r\n      })\r\n  }\r\n\r\n  onChange = (page, pageSize) => {\r\n    this.findPokemons(page, pageSize)\r\n  }\r\n\r\n  render() {\r\n    const { pokemonArray, countPokemons, history } = this.props\r\n    const { onChange } = this\r\n    return (\r\n      <div id=\"page\">\r\n        <div id=\"allItems\">\r\n          {pokemonArray.length ? (\r\n            pokemonArray.map(items => (\r\n              <PokemonItem key={items.id} source={items} history={history} />\r\n            ))\r\n          ) : (\r\n            <div />\r\n          )}\r\n        </div>\r\n        <Pagination\r\n          showSizeChanger\r\n          onShowSizeChange={onChange}\r\n          defaultCurrent={1}\r\n          total={countPokemons}\r\n          pageSizeOptions={[10, 20, 50]}\r\n          onChange={onChange}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { Main as MainComponent } from './Main'\r\nimport { connect } from 'react-redux'\r\nimport { changePokemonArray } from '../../Actions/changePokemonArray'\r\n\r\n// сюда передаем параметры которые у нас будут доступны пропсами у компонента\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    pokemonArray: state.pokemonArray.results,\r\n    countPokemons: state.pokemonArray.count,\r\n  }\r\n}\r\n\r\n// сюда передаем функции,  который будут экшенами\r\nfunction mapDispatchToProps(dispatch) {\r\n  return {\r\n    onChangePokemonArray: pokemonArray =>\r\n      dispatch(changePokemonArray(pokemonArray)),\r\n  }\r\n}\r\n\r\nexport const Main = connect(mapStateToProps, mapDispatchToProps)(MainComponent)\r\n","import { CHANGE_POKEMON_ARRAY } from '../constants/action.type'\r\n\r\nexport const changePokemonArray = pokemonArray => {\r\n  return {\r\n    type: CHANGE_POKEMON_ARRAY,\r\n    payload: pokemonArray,\r\n  }\r\n}\r\n\r\n","export const CHANGE_POKEMON_ARRAY = 'CHANGE_POKEMON_ARRAY'","import React, { useEffect, useState } from 'react'\r\nimport './PokemonInfoItem.scss'\r\nimport axios from 'axios'\r\nimport { Spin, Progress } from 'antd'\r\nimport Img from 'react-image'\r\n\r\nexport default props => {\r\n  const [pokemonsInfo, setPokemonsInfo] = useState(null)\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `https://pokeapi.co/api/v2/pokemon/${props.match.params.pokemonName}`,\r\n      )\r\n      .then(val => {\r\n        const { stats, types, name, sprites } = val.data\r\n        setPokemonsInfo({ stats, types, name, sprites })\r\n      })\r\n  }, [])\r\n\r\n  return pokemonsInfo === null ? (\r\n    <div className=\"Loader\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  ) : (\r\n    <div className=\"pokemonInfoItem\">\r\n      <h2>{pokemonsInfo.name}</h2>\r\n      <div className=\"row\">\r\n        <div className=\"pokemon Image\">\r\n          <Img\r\n            src={[\r\n              pokemonsInfo.sprites.front_default,\r\n              ' http://cdn.onlinewebfonts.com/svg/img_384.png',\r\n            ]}\r\n          />\r\n        </div>\r\n        <div className=\"pokemon Stats\">\r\n          {pokemonsInfo.stats.map(item => (\r\n            <div>\r\n              <div>{item.stat.name}</div>\r\n              <Progress percent={item.base_stat} showInfo={false} />\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { createStore } from 'redux'\r\nimport { Provider } from 'react-redux'\r\nimport reducers from './Reducers/'\r\nimport { HashRouter as Router } from 'react-router-dom'\r\nimport App from './Components/App'\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\r\n)\r\n\r\nconsole.log(store.getState())\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router >\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n)\r\n","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport Header from '../Header'\r\nimport { Main } from '../Main/'\r\nimport PokemonInfoItem from '../PokemonInfoItem/'\r\n\r\nexport default () => {\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Main} />\r\n        <Route path=\"/:pokemonName\" component={PokemonInfoItem} />\r\n      </Switch>\r\n    </>\r\n  )\r\n}\r\n// history.push(/названия покемона)\r\n// пропcы в самом компоненте будут\r\n// this.props.history.... - тут  надо уточнить где имено\r\n// history.push - на онклик, и передать имя покемона\r\n// ponyal\r\n// при рендере компонента. мы получаем пропса, кидаем запрос, и отображаем информацию\r\n//potomu chto ya dumal ono po drugomu raboraer\r\n// какого оно редиректит на этого говножуя\r\n// не надо так думать плохо\r\n\r\n//!pochemu ono ne renderit Main?\r\n// оно сразу кидает на говножуя\r\n// я не могу убрать надпись после слэша\r\n"],"sourceRoot":""}